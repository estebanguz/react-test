import { useState, useEffect } from "react";
import { newReservation } from "../../../api/reservation";

export const useReservation = () => {
	const addReservation = async ({
		guest,
		registerDate,
		separated,
		mark,
		guestName,
		guestAge,
		guestProffession,
		guestCompany,
		guestPosition,
		guestMartialStatus,
		guestAddress,
		guestCity,
		guestState,
		guestCp,
		coupleName,
		coupleAge,
		coupleOcupation,
		coupleCompany,
		couplePosition,
		cardNumber,
		cardName,
		cardExp,
		cardCvc,
		cardType,
		cardBank,
		cardConcept,
		quantity,
		phone1,
		phone2,
		email1,
		email2,
		companions,
		hotel,
		destination,
		type,
		nights,
		room,
		openDates,
		arrivalDate,
		departureDate,
		pax,
		presentation,
		validity,
		typeId,
		cardType1,
		bank1,
		cardType2,
		bank2,
		transportation,
		internalNotes,
		externalNotes,
		quantityCards,
		total,
		aprox,
		realQty,
	}) => {
			const reservation = await newReservation({
			data: {
				general: {
					no_guest: guest,
					separated: separated,
					mark: mark,
					registerDate: registerDate
				},
				guest_data: {
					name: guestName,
					age: guestAge,
					proffession: guestProffession,
					company: guestCompany,
					position: guestPosition,
					marital_status: guestMartialStatus,
					address: guestAddress,
					city: guestCity,
					state: guestState,
					cp: guestCp,
				},
				couple_data: {
					name: coupleName,
					age: coupleAge,
					ocupation: coupleOcupation,
					company: coupleCompany,
					position: couplePosition,
				},
				payment_method: {
					card_number: cardNumber,
					name: cardName,
					exp_date: cardExp,
					cvc: cardCvc,
					card_type: cardType,
					bank: cardBank.value,
					concept: cardConcept,
					quantity: quantity,
				},
				contact: {
					phone1: phone1,
					phone2: phone2,
					email1: email1,
					email2: email2,
				},
				community_property: {
					aprox_income: aprox,
					real_income: realQty,
				},
				companions: companions,
				room_description: {
					hotel_id: hotel.value,
					hotel_name: hotel.label,
					destination: destination,
					type: type,
					nights: nights,
					room: room,
					open_dates: openDates,
					arrival_date: arrivalDate,
					departure_date: departureDate,
					pax: pax,
					validity: validity,
					cardType1: cardType1,
					bank1: bank1.value,
					cardType2: cardType2,
					bank2: bank2.value,
					transportation: transportation,
					internal_notes: internalNotes,
					external_notes: externalNotes,
					cards: quantityCards,
					total: total,
				},
			},
		});

		return reservation;
	};

	return [addReservation];
};
